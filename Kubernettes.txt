
Pod -> A single unit of deployment
To deplooy a application in kubernetees cluster we minimum need one pod
Where pods are located
	-> we generally deploy pods on worker node
	-> every pod running on node contians IP address
	-> one main container + helper containers
	-> One POD communicate with another POD using its IP
	-> All the containers running on a POD ust have unique IP
	-> Contianers with in the same POD can communicate with same IP
	-> To deploy a POD we can create by describing a commands in yml file
		-> apiVersion - Which version of kubernetes API you are using
		-> kind - Whta kind og object you want to create (Pod/service..)
		-> metdata - Data helps uniquely identifying the object
		-> spec - desired state of object
		
		
Create a Service before its corresponding backend workloads (Deployments or ReplicaSets), and before any workloads that need to access it. When Kubernetes starts a container, it provides environment variables pointing to all the Services which were running when the container was started. For example, if a Service named foo exists, all containers will get the following variables in their initial environment:

FOO_SERVICE_HOST=<the host the Service is running on>
FOO_SERVICE_PORT=<the port the Service is running on>
This does imply an ordering requirement - any Service that a Pod wants to access must be created before the Pod itself, or else the environment variables will not be populated. DNS does not have this restriction.